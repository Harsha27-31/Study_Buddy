<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>StudyBuddy - Syllabus</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

    :root {
      --primary: #5e35b1;
      --secondary: #4527a0;
      --accent: #7c4dff;
      --light: #f5f3ff;
      --dark: #1a237e;
      --success: #26a69a;
      --warning: #ff7043;
      --card-bg: #ffffff;
      --shadow-sm: 0 1px 3px rgba(0,0,0,0.12);
      --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
      --shadow-lg: 0 10px 25px rgba(0,0,0,0.1);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #f3e5f5 0%, #e8eaf6 100%);
      color: var(--dark);
      min-height: 100vh;
      overflow-x: hidden;
    }

    .container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 2rem;
      background: var(--card-bg);
      border-radius: 12px;
      box-shadow: var(--shadow-lg);
      transform: translateY(20px);
      opacity: 0;
      animation: fadeInUp 0.6s cubic-bezier(0.22, 0.61, 0.36, 1) forwards;
    }

    @keyframes fadeInUp {
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    h1 {
      text-align: center;
      font-size: 2.5rem;
      margin-bottom: 1.5rem;
      color: var(--primary);
      position: relative;
      display: inline-block;
      left: 50%;
      transform: translateX(-50%);
    }

    h1::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(90deg, var(--primary), var(--accent));
      border-radius: 2px;
      transform: scaleX(0);
      transform-origin: left;
      animation: underlineExpand 1.2s ease-out 0.5s forwards;
    }

    @keyframes underlineExpand {
      to {
        transform: scaleX(1);
      }
    }

    .filters {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      margin-bottom: 2rem;
      background: rgba(255,255,255,0.9);
      padding: 1.5rem;
      border-radius: 10px;
      box-shadow: var(--shadow-sm);
      animation: slideInDown 0.5s ease-out;
    }

    @keyframes slideInDown {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .filters label {
      font-weight: 500;
      color: var(--dark);
      margin-right: 0.5rem;
      font-size: 0.9rem;
    }

    .filters select {
      padding: 0.7rem 1rem;
      border: 2px solid #d1c4e9;
      border-radius: 8px;
      font-size: 0.9rem;
      background: white;
      outline: none;
      transition: all 0.3s ease;
      min-width: 180px;
    }

    .filters select:focus {
      border-color: var(--accent);
      box-shadow: 0 0 0 3px rgba(124, 77, 255, 0.2);
    }

    h2 {
      margin: 2rem 0 1rem;
      color: var(--primary);
      font-size: 1.6rem;
      position: relative;
      display: inline-block;
      opacity: 0;
      transform: translateX(-20px);
      animation: slideIn 0.6s ease-out 0.4s forwards;
    }

    @keyframes slideIn {
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    h2::after {
      content: '';
      position: absolute;
      bottom: -6px;
      left: 0;
      width: 50px;
      height: 3px;
      background: var(--accent);
      border-radius: 2px;
    }

    .syllabus-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.2rem;
      margin-top: 1.2rem;
    }

    .syllabus-card {
      background: white;
      border-radius: 10px;
      padding: 1.5rem;
      box-shadow: var(--shadow-md);
      transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
      border: 1px solid #e1bee7;
      opacity: 0;
      transform: translateY(20px);
      animation: cardAppear 0.5s ease-out forwards;
      animation-delay: calc(var(--delay) * 0.1s);
    }

    @keyframes cardAppear {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .syllabus-card:hover {
      transform: translateY(-5px) !important;
      box-shadow: var(--shadow-lg);
      border-color: var(--accent);
    }

    .syllabus-card h3 {
      margin: 0 0 0.8rem;
      font-size: 1.2rem;
      color: var(--dark);
      font-weight: 600;
    }

    .syllabus-card .meta {
      display: flex;
      gap: 0.8rem;
      margin-bottom: 1rem;
      font-size: 0.85rem;
      color: #5e35b1;
      flex-wrap: wrap;
    }

    .syllabus-card .meta span {
      display: flex;
      align-items: center;
      gap: 0.3rem;
      background: #ede7f6;
      padding: 0.3rem 0.8rem;
      border-radius: 20px;
    }

    .syllabus-card .actions {
      display: flex;
      gap: 0.8rem;
      margin-top: 1.2rem;
    }

    .btn {
      padding: 0.6rem 1.2rem;
      border-radius: 8px;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      cursor: pointer;
      transition: all 0.2s ease;
      text-decoration: none;
      border: none;
      font-size: 0.9rem;
    }

    .btn-primary {
      background: var(--primary);
      color: white;
    }

    .btn-primary:hover {
      background: var(--secondary);
      transform: translateY(-2px);
    }

    .btn-outline {
      background: transparent;
      color: var(--primary);
      border: 1px solid var(--primary);
    }

    .btn-outline:hover {
      background: rgba(94, 53, 177, 0.1);
      transform: translateY(-2px);
    }

    .empty-state {
      text-align: center;
      padding: 2rem;
      color: #7e57c2;
      font-size: 1rem;
      animation: fadeIn 0.5s ease;
      grid-column: 1 / -1;
    }

    .empty-state i {
      font-size: 2.5rem;
      color: #d1c4e9;
      margin-bottom: 0.8rem;
      animation: float 3s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-8px);
      }
    }
    .main-nav {
  background: #2c3e50;
  padding: 1rem;
}

.main-nav ul {
  display: flex;
  list-style: none;
  gap: 1.5rem;
  margin: 0;
  padding: 0;
}

.main-nav a {
  color: white;
  text-decoration: none;
  font-weight: 500;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  transition: background 0.3s ease;
}

.main-nav a:hover {
  background: #34495e;
}

.main-nav a.active {
  background: var(--primary);
  color: white;
}
    /* PDF Viewer Modal */
    .pdf-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.9);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .pdf-modal.active {
      opacity: 1;
      visibility: visible;
    }

    .pdf-container {
      width: 85%;
      height: 85%;
      background: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 5px 30px rgba(0,0,0,0.4);
      transform: scale(0.9);
      transition: transform 0.3s ease;
      display: flex;
      flex-direction: column;
    }

    .pdf-modal.active .pdf-container {
      transform: scale(1);
    }

    .pdf-header {
      padding: 1rem;
      background: var(--primary);
      color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .pdf-header h3 {
      margin: 0;
      font-size: 1.1rem;
      font-weight: 500;
    }

    .close-btn {
      background: none;
      border: none;
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
      transition: transform 0.2s ease;
    }

    .close-btn:hover {
      transform: rotate(90deg);
    }

    .pdf-viewer-container {
      flex: 1;
      overflow: auto;
      position: relative;
    }

    #pdfViewer {
      width: 100%;
      height: 100%;
    }

    .pdf-controls {
      padding: 0.8rem;
      background: #f3e5f5;
      display: flex;
      gap: 0.8rem;
      align-items: center;
      border-top: 1px solid #d1c4e9;
    }

    .pdf-controls button {
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 6px;
      background: var(--primary);
      color: white;
      cursor: pointer;
      transition: background 0.2s ease;
      font-size: 0.9rem;
    }

    .pdf-controls button:hover {
      background: var(--secondary);
    }

    .page-info {
      margin: 0 1rem;
      font-size: 0.9rem;
      color: #5e35b1;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .container {
        padding: 1.2rem;
        margin: 1rem;
      }

      h1 {
        font-size: 1.8rem;
      }

      .filters {
        flex-direction: column;
        gap: 0.8rem;
        padding: 1rem;
      }

      .filters select {
        width: 100%;
      }

      .syllabus-grid {
        grid-template-columns: 1fr;
      }

      .pdf-container {
        width: 95%;
        height: 90%;
      }
    }
  </style>
</head>
<body>
  <nav class="main-nav">
    <ul>
      <li><a href="/home">Home</a></li>
      <li><a href="/syllabus">Syllabus</a></li>
      <li><a class="active" href="/modelpapers">Model Papers</a></li> <!-- Current page -->
      <li><a href="/resources">Resources</a></li>
      <li><a href="/upload">Uploads</a></li>
    </ul>
  </nav>
  <div class="container">
    <h1>University Syllabus</h1>
    
    <div class="filters">
      <div>
        <label for="yearSelect">Year:</label>
        <select id="yearSelect">
          <option value="">All Years</option>
          <option value="1">1st Year</option>
          <option value="2">2nd Year</option>
          <option value="3">3rd Year</option>
          <option value="4">4th Year</option>
        </select>
      </div>

      <div>
        <label for="semSelect">Semester:</label>
        <select id="semSelect">
          <option value="">All Semesters</option>
          <option value="1">1st Semester</option>
          <option value="2">2nd Semester</option>
        </select>
      </div>

      <div>
        <label for="subjectSelect">Subject:</label>
        <select id="subjectSelect">
          <option value="">All Subjects</option>
          <option value="CP">Computer Programming</option>
          <option value="CHEMISTRY">Chemistry</option>
          <option value="M1">Mathematics I</option>
          <option value="ENGLISH">English</option>
          <option value="BCME">BCME</option>
          <option value="PHYSICS">Physics</option>
          <option value="BEEE">BEEE</option>
          <option value="M2">Mathematics II</option>
          <option value="EG">Engineering Graphics</option>
          <option value="DS">Data Structures</option>
        </select>
      </div>

      <div>
        <label for="branchSelect">Branch:</label>
        <select id="branchSelect">
          <option value="">All Branches</option>
          <option value="CSE">Computer Science</option>
          <option value="AIML">AI & ML</option>
          <option value="CIC">CIC</option>
          <option value="ECE">Electronics</option>
          <option value="EEE">Electrical</option>
          <option value="MECH">Mechanical</option>
          <option value="CIVIL">Civil</option>
          <option value="IT">IT</option>
          <option value="AIDS">AI & DS</option>
          <option value="CSIT">CSIT</option>
        </select>
      </div>
    </div>

    <h2>Available Syllabus</h2>
    <div id="syllabusContainer" class="syllabus-grid">
      <div class="empty-state">
        <i class="fas fa-book-open"></i>
        <p>Select filters to view available syllabus</p>
      </div>
    </div>
  </div>

  <!-- PDF Viewer Modal -->
  <div class="pdf-modal" id="pdfModal">
    <div class="pdf-container">
      <div class="pdf-header">
        <h3 id="pdfTitle">PDF Viewer</h3>
        <button class="close-btn" id="closePdf">&times;</button>
      </div>
      <div class="pdf-viewer-container">
        <canvas id="pdfViewer" class="pdf-viewer"></canvas>
      </div>
      <div class="pdf-controls">
        <button id="prevPage">Previous</button>
        <span class="page-info">Page <span id="currentPage">1</span> of <span id="totalPages">1</span></span>
        <button id="nextPage">Next</button>
        <button id="downloadPdf">Download</button>
      </div>
    </div>
  </div>

  <script>
    // Set PDF.js worker path
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.worker.min.js';

    // DOM Elements
    const yearSelect = document.getElementById("yearSelect");
    const semSelect = document.getElementById("semSelect");
    const subjectSelect = document.getElementById("subjectSelect");
    const branchSelect = document.getElementById("branchSelect");
    const syllabusContainer = document.getElementById("syllabusContainer");
    
    // PDF Viewer Elements
    const pdfModal = document.getElementById("pdfModal");
    const pdfTitle = document.getElementById("pdfTitle");
    const pdfViewer = document.getElementById("pdfViewer");
    const closePdf = document.getElementById("closePdf");
    const prevPage = document.getElementById("prevPage");
    const nextPage = document.getElementById("nextPage");
    const currentPage = document.getElementById("currentPage");
    const totalPages = document.getElementById("totalPages");
    const downloadPdf = document.getElementById("downloadPdf");

    // PDF Viewer State
    let pdfDoc = null;
    let pageNum = 1;
    let pageRendering = false;
    let pageNumPending = null;
    let scale = 1.5;
    let currentPdfUrl = '';

    // Syllabus Data
    const syllabusData = [
      {
        "title": "Computer Programming Syllabus",
        "subject": "CP",
        "semester": "1",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/cp.pdf",
        "type": "pdf"
      },
      {
        "title": "Mathematics I Syllabus",
        "subject": "M1",
        "semester": "1",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/m1.pdf",
        "type": "pdf"
      },
      {
        "title": "Chemistry Syllabus",
        "subject": "CHEMISTRY",
        "semester": "1",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/chemistry.pdf",
        "type": "pdf"
      },
      {
        "title": "Data Structures Syllabus",
        "subject": "DS",
        "semester": "2",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/ds.pdf",
        "type": "pdf"
      },
      {
        "title": "Mathematics II Syllabus",
        "subject": "M2",
        "semester": "2",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/m2.pdf",
        "type": "pdf"
      },
      {
        "title": "Physics Syllabus",
        "subject": "PHYSICS",
        "semester": "2",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/physics.pdf",
        "type": "pdf"
      },
      {
        "title": "BEEE Syllabus",
        "subject": "BEEE",
        "semester": "2",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/beee.pdf",
        "type": "pdf"
      },
      {
        "title": "Engineering Graphics Syllabus",
        "subject": "EG",
        "semester": "2",
        "year": "1",
        "branch": ["CSE", "AIML", "CIC", "ECE", "EEE", "MECH", "CIVIL", "IT", "AIDS", "CSIT"],
        "link": "https://example.com/syllabus/eg.pdf",
        "type": "pdf"
      }
    ];

    // Render PDF page
    function renderPage(num) {
      pageRendering = true;
      pdfDoc.getPage(num).then(function(page) {
        const viewport = page.getViewport({ scale: scale });
        pdfViewer.height = viewport.height;
        pdfViewer.width = viewport.width;

        const renderContext = {
          canvasContext: pdfViewer.getContext('2d'),
          viewport: viewport
        };

        const renderTask = page.render(renderContext);

        renderTask.promise.then(function() {
          pageRendering = false;
          currentPage.textContent = num;
          
          if (pageNumPending !== null) {
            renderPage(pageNumPending);
            pageNumPending = null;
          }
        });
      });
    }

    // Go to previous page
    function onPrevPage() {
      if (pageNum <= 1) return;
      pageNum--;
      queueRenderPage(pageNum);
    }

    // Go to next page
    function onNextPage() {
      if (pageNum >= pdfDoc.numPages) return;
      pageNum++;
      queueRenderPage(pageNum);
    }

    // Queue page rendering
    function queueRenderPage(num) {
      if (pageRendering) {
        pageNumPending = num;
      } else {
        renderPage(num);
      }
    }

    // Open PDF in modal
    function openPdf(title, url) {
      pdfTitle.textContent = title;
      currentPdfUrl = url;
      pdfModal.classList.add('active');
      
      // Load the PDF
      pdfjsLib.getDocument(url).promise.then(function(pdf) {
        pdfDoc = pdf;
        totalPages.textContent = pdf.numPages;
        pageNum = 1;
        renderPage(pageNum);
      }).catch(function(error) {
        console.error('PDF loading error:', error);
        alert('Failed to load PDF. Please try again or download the file.');
      });
    }

    // Close PDF modal
    function closePdfViewer() {
      pdfModal.classList.remove('active');
      if (pdfDoc) {
        pdfDoc.destroy();
        pdfDoc = null;
      }
    }

    // Download PDF
    function downloadCurrentPdf() {
      if (!currentPdfUrl) return;
      
      const a = document.createElement('a');
      a.href = currentPdfUrl;
      a.download = pdfTitle.textContent + '.pdf';
      a.target = '_blank';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
    }

    // Event listeners for PDF viewer
    closePdf.addEventListener('click', closePdfViewer);
    prevPage.addEventListener('click', onPrevPage);
    nextPage.addEventListener('click', onNextPage);
    downloadPdf.addEventListener('click', downloadCurrentPdf);

    // Close modal when clicking outside
    pdfModal.addEventListener('click', function(e) {
      if (e.target === pdfModal) {
        closePdfViewer();
      }
    });

    // Filter syllabus based on selections
    function filterSyllabus() {
      const year = yearSelect.value;
      const sem = semSelect.value;
      const subject = subjectSelect.value;
      const branch = branchSelect.value;

      // Filter syllabus
      const filtered = syllabusData.filter(item =>
        (!year || item.year === year) &&
        (!sem || item.semester === sem) &&
        (!subject || item.subject === subject) &&
        (!branch || item.branch.includes(branch))
      );

      renderSyllabus(filtered);
    }

    // Render filtered syllabus
    function renderSyllabus(syllabus) {
      syllabusContainer.innerHTML = "";

      if (syllabus.length === 0) {
        syllabusContainer.innerHTML = `
          <div class="empty-state">
            <i class="fas fa-search"></i>
            <p>No syllabus found for your selected filters</p>
            <p class="note">Try adjusting your filters</p>
          </div>
        `;
        return;
      }

      syllabus.forEach((item, index) => {
        const card = document.createElement("div");
        card.className = "syllabus-card";
        card.style.setProperty('--delay', index % 10); // Stagger animations

        card.innerHTML = `
          <h3>${item.title}</h3>
          <div class="meta">
            <span><i class="fas fa-calendar-alt"></i> Year ${item.year}</span>
            <span><i class="fas fa-book"></i> ${item.subject}</span>
            <span><i class="fas fa-clock"></i> Sem ${item.semester}</span>
            <span><i class="fas fa-graduation-cap"></i> ${item.branch.join(', ')}</span>
          </div>
          <div class="actions">
            <button class="btn btn-primary view-pdf" data-title="${item.title}" data-url="${item.link}">
              <i class="fas fa-eye"></i> View
            </button>
            <a href="${item.link}" target="_blank" class="btn btn-outline">
              <i class="fas fa-download"></i> Download
            </a>
          </div>
        `;

        syllabusContainer.appendChild(card);
      });

      // Add event listeners to view buttons
      document.querySelectorAll('.view-pdf').forEach(btn => {
        btn.addEventListener('click', function() {
          const title = this.getAttribute('data-title');
          const url = this.getAttribute('data-url');
          openPdf(title, url);
        });
      });
    }

    // Event listeners for filters
    yearSelect.addEventListener("change", filterSyllabus);
    semSelect.addEventListener("change", filterSyllabus);
    subjectSelect.addEventListener("change", filterSyllabus);
    branchSelect.addEventListener("change", filterSyllabus);

    // Initialize with all syllabus
    filterSyllabus();

    // Handle window resize for PDF viewer
    window.addEventListener('resize', function() {
      if (pdfModal.classList.contains('active') && pdfDoc) {
        queueRenderPage(pageNum);
      }
    });
  </script>
</body>
</html>